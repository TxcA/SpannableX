{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Code Sample Kotlin Java \u96c6\u6210 \u00b6 \u6846\u67b6\u5b58\u50a8\u5728 mavenCentral \uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u6839\u636e\u521b\u5efa\u9879\u76ee\u7684 Android Studio \u7248\u672c\u6709\u6240\u4e0d\u540c\u3002 // \u9879\u76ee\u6839\u76ee\u5f55build.gradle allprojects { repositories { mavenCentral () maven { url 'https://jitpack.io' } } } // \u9879\u76ee\u6839\u76ee\u5f55settings.gradle dependencyResolutionManagement { repositories { mavenCentral () maven { url 'https://jitpack.io' } } } \u7136\u540e\u5728 module \u7684 build.gradle \u6dfb\u52a0\u4f9d\u8d56\u6846\u67b6 dependencies { // https://github.com/TxcA/SpannableX implementation 'com.itxca.spannablex:spannablex:1.0.4' // \u82e5\u9700\u4f7f\u7528glide()\u65b9\u6cd5\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u6216Gif, \u9700\u540c\u65f6\u5f15\u5165Glide implementation 'com.github.bumptech.glide:glide:4.13.1' } \u4f7f\u7528 \u00b6 Kotlin DSL TextView . text = spannable { \"this is real text.\" . text () \"spannable\" . span { color ( Color . BLUE ) style ( Typeface . BOLD ) } } Kotlin|Java \u94fe\u5f0f TextView . setText ( Span . create () . text ( \"this is real text.\" ) . text ( \"spannable\" ). color ( Color . BLUE ). style ( Typeface . BOLD ) . spannable ());","title":"\u5f00\u59cb\u4f7f\u7528"},{"location":"#_1","text":"\u6846\u67b6\u5b58\u50a8\u5728 mavenCentral \uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u6839\u636e\u521b\u5efa\u9879\u76ee\u7684 Android Studio \u7248\u672c\u6709\u6240\u4e0d\u540c\u3002 // \u9879\u76ee\u6839\u76ee\u5f55build.gradle allprojects { repositories { mavenCentral () maven { url 'https://jitpack.io' } } } // \u9879\u76ee\u6839\u76ee\u5f55settings.gradle dependencyResolutionManagement { repositories { mavenCentral () maven { url 'https://jitpack.io' } } } \u7136\u540e\u5728 module \u7684 build.gradle \u6dfb\u52a0\u4f9d\u8d56\u6846\u67b6 dependencies { // https://github.com/TxcA/SpannableX implementation 'com.itxca.spannablex:spannablex:1.0.4' // \u82e5\u9700\u4f7f\u7528glide()\u65b9\u6cd5\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u6216Gif, \u9700\u540c\u65f6\u5f15\u5165Glide implementation 'com.github.bumptech.glide:glide:4.13.1' }","title":"\u96c6\u6210"},{"location":"#_2","text":"Kotlin DSL TextView . text = spannable { \"this is real text.\" . text () \"spannable\" . span { color ( Color . BLUE ) style ( Typeface . BOLD ) } } Kotlin|Java \u94fe\u5f0f TextView . setText ( Span . create () . text ( \"this is real text.\" ) . text ( \"spannable\" ). color ( Color . BLUE ). style ( Typeface . BOLD ) . spannable ());","title":"\u4f7f\u7528"},{"location":"chain/","text":"Kotlin | Java \u5747\u80fd\u4f7f\u7528\u7684\u94fe\u5f0f\u8c03\u7528\u65b9\u5f0f\u3002 \u6838\u5fc3\u65b9\u6cd5 \u00b6 Span.create().spannable() // Span.create() \u521b\u5efaSpan, \u6700\u540espannable() \u6784\u5efaSpannable\u5e76\u8fd4\u56de\u3002 TextView . text = Span . create () // \u7ed9bold text\u9644\u52a0\u7c97\u4f53\u53ca\u7ea2\u8272 . text ( \"bold text\" ). style ( Typeface . BOLD ). color ( Color . RED ) // \u6dfb\u52a0\u4e0d\u5e26\u6837\u5f0f\u7684real text . text ( \"real text\" ) // \u6784\u5efaspan . spannable () Span\u65b9\u6cd5 \u00b6 create() \u6784\u5efa\u4e00\u4e2aSpan\u94fe TextView . text = Span . create () ... spannable() \u6784\u5efaspannable TextView . text = Span . create () // \u7ed9bold text\u9644\u52a0\u7c97\u4f53 . text ( \"bold text\" ). style ( Typeface . BOLD ) // \u94fe\u5f0f\u6784\u5efa\u65b9\u5f0f\u6700\u540e\u9700\u8c03\u7528spannable()\u8fdb\u884cSpan\u6784\u5efa . spannable () text(String) \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c Span . create () // \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c, \u5e76\u9644\u52a0\u7ea2\u8272 . text ( \"message\" ). color ( Color . RED ) // \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c . text ( \"this is real text.\" ) ... newline(Int) \u82e5\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u4e00\u884c\u3002\u82e5\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u6307\u5b9a\u6570\u91cf\u884c\u3002 \u6362\u884c\u64cd\u4f5c(\u4e5f\u53ef\u81ea\u884c\u4f7f\u7528 \\n ) Span . create () // \u5728\u6587\u672c\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26 . text ( \"message\" ). newline (). color ( Color . RED ) // \u5f53\u524d\u4f4d\u7f6e\u63d2\u5165\u6362\u884c . newline () ... \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample","title":"Kotlin\\Java \u94fe\u5f0f"},{"location":"chain/#_1","text":"Span.create().spannable() // Span.create() \u521b\u5efaSpan, \u6700\u540espannable() \u6784\u5efaSpannable\u5e76\u8fd4\u56de\u3002 TextView . text = Span . create () // \u7ed9bold text\u9644\u52a0\u7c97\u4f53\u53ca\u7ea2\u8272 . text ( \"bold text\" ). style ( Typeface . BOLD ). color ( Color . RED ) // \u6dfb\u52a0\u4e0d\u5e26\u6837\u5f0f\u7684real text . text ( \"real text\" ) // \u6784\u5efaspan . spannable ()","title":"\u6838\u5fc3\u65b9\u6cd5"},{"location":"chain/#span","text":"create() \u6784\u5efa\u4e00\u4e2aSpan\u94fe TextView . text = Span . create () ... spannable() \u6784\u5efaspannable TextView . text = Span . create () // \u7ed9bold text\u9644\u52a0\u7c97\u4f53 . text ( \"bold text\" ). style ( Typeface . BOLD ) // \u94fe\u5f0f\u6784\u5efa\u65b9\u5f0f\u6700\u540e\u9700\u8c03\u7528spannable()\u8fdb\u884cSpan\u6784\u5efa . spannable () text(String) \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c Span . create () // \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c, \u5e76\u9644\u52a0\u7ea2\u8272 . text ( \"message\" ). color ( Color . RED ) // \u6dfb\u52a0\u4e00\u6bb5\u6587\u672c . text ( \"this is real text.\" ) ... newline(Int) \u82e5\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u4e00\u884c\u3002\u82e5\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u6307\u5b9a\u6570\u91cf\u884c\u3002 \u6362\u884c\u64cd\u4f5c(\u4e5f\u53ef\u81ea\u884c\u4f7f\u7528 \\n ) Span . create () // \u5728\u6587\u672c\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26 . text ( \"message\" ). newline (). color ( Color . RED ) // \u5f53\u524d\u4f4d\u7f6e\u63d2\u5165\u6362\u884c . newline () ...","title":"Span\u65b9\u6cd5"},{"location":"chain/#_2","text":"\ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample","title":"\u5176\u5b83\u8bf4\u660e"},{"location":"change/","text":"1.0.4 \u00b6 2022-06-07 \u652f\u6301\u5e38\u7528 ParagraphStyle quote bullet alignment lineBackground lineHeight imageParagraph \u65b0\u589e custom<T : CharacterStyle> \u548c custom<T : ParagraphStyle> , \u652f\u6301\u4f20\u5165\u81ea\u5b9a\u4e49Span. \u65b0\u589e MarginSpan \u8be6\u89c1\uff1a \u5e38\u7528Span 1.0.3 \u00b6 2022-05-30 \u540c\u6b65 @liangjingkanji/spannable v1.1.2 image()\u65b0\u589e\u652f\u6301\u8bbe\u7f6e\u5de6\u53f3\u8fb9\u8ddd\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e \u65b0\u589eglide()\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u3001Gif\u56fe\u7247 \u8be6\u89c1\uff1a \u56fe\u7247\u52a0\u8f7d 1.0.2 \u00b6 2022-05-11 \u4fee\u590d\u672a\u6210\u529f\u6253\u5305\u5e76\u4e0a\u4f20\u6e90\u7801\u5230mavenCentral 1.0.0 \u00b6 2022-03-31 \u53d1\u5e03 SpannableX","title":"\u66f4\u65b0\u65e5\u5fd7"},{"location":"change/#104","text":"2022-06-07 \u652f\u6301\u5e38\u7528 ParagraphStyle quote bullet alignment lineBackground lineHeight imageParagraph \u65b0\u589e custom<T : CharacterStyle> \u548c custom<T : ParagraphStyle> , \u652f\u6301\u4f20\u5165\u81ea\u5b9a\u4e49Span. \u65b0\u589e MarginSpan \u8be6\u89c1\uff1a \u5e38\u7528Span","title":"1.0.4"},{"location":"change/#103","text":"2022-05-30 \u540c\u6b65 @liangjingkanji/spannable v1.1.2 image()\u65b0\u589e\u652f\u6301\u8bbe\u7f6e\u5de6\u53f3\u8fb9\u8ddd\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e \u65b0\u589eglide()\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u3001Gif\u56fe\u7247 \u8be6\u89c1\uff1a \u56fe\u7247\u52a0\u8f7d","title":"1.0.3"},{"location":"change/#102","text":"2022-05-11 \u4fee\u590d\u672a\u6210\u529f\u6253\u5305\u5e76\u4e0a\u4f20\u6e90\u7801\u5230mavenCentral","title":"1.0.2"},{"location":"change/#100","text":"2022-03-31 \u53d1\u5e03 SpannableX","title":"1.0.0"},{"location":"dsl/","text":"\u57fa\u4e8eKotlin\u4f18\u5f02\u7684\u7279\u6027\uff0c\u4f7f\u7528DSL\u6765\u6784\u5efa\u4e00\u4e2aSpannable\u3002 \u6838\u5fc3\u65b9\u6cd5 \u00b6 spannable{ } \u521b\u5efa\u4e00\u4e2aSpannable DSL, \u53ef\u4ee5\u643a\u5e26receiver\u3002 // \u4e0d\u643a\u5e26receiver TextView . text = spannable { // \u7ed9bold text\u9644\u52a0\u7c97\u4f53\u53ca\u7ea2\u8272 // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"bold text\" . span { style ( Typeface . BOLD ) color ( Color . RED ) } // \u6dfb\u52a0\u4e0d\u5e26\u6837\u5f0f\u7684real text \"real text\" . text () } // \u643a\u5e26receiver TextView . text = \"receiver\" . spannable { // \u5bf9receiver\u8fdb\u884cspanned\u64cd\u4f5c style ( Typeface . ITALIC ) style ( Typeface . BOLD ) color ( Color . BLACK ) // \u5bf9text\u8fdb\u884cspanned\u64cd\u4f5c\u5e76\u9644\u52a0\u5728receiver\u540e\u9762 // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"text\" . span { style ( Typeface . BOLD ) color ( Color . RED ) } } DSL\u5185\u9644\u52a0\u65b9\u6cd5 \u00b6 \u4ee5\u4e0b\u65b9\u6cd5\u4e3a spannable \u5185\u90e8\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u5728 spannable DSL \u5185\u90e8\u8c03\u7528\u3002 CharSequence?.text() \u6dfb\u52a0\u4e00\u6bb5\u4e0d\u9644\u52a0\u6548\u679c\u7684\u6587\u672c TextView . text = spannable { \"this is real text.\" . text () } CharSequence?.span{ } \u6dfb\u52a0\u4e00\u4e2a\u9700\u8981\u6df7\u5408span\u7684DSL TextView . text = spannable { \"color text.\" . color ( Color . RED ) // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"mix text.\" . span { style ( Typeface . ITALIC and Typeface . BOLD ) color ( Color . RED ) } } T?.newline(Int) \u82e5\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u4e00\u884c\u3002\u82e5\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u6307\u5b9a\u6570\u91cf\u884c\u3002\u6362\u884c\u64cd\u4f5c(\u4e5f\u53ef\u81ea\u884c\u4f7f\u7528 \\n )\u3002 \u82e5\u6709receiver\uff0c\u5c31\u5bf9receiver\u672b\u5c3e\u6dfb\u52a0 \\n \uff0c\u5e76\u8fd4\u56dereceiver\u3002 \u82e5\u65e0receiver\uff0c\u5c31\u76f4\u63a5\u5bf9\u5f53\u524dDSL\u5185\u8fdb\u884c\u6362\u884c\u3002 TextView . text = spannable { // \u5728\u6587\u672c\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\uff0c\u5e76\u8fd4\u56de\u6587\u672c \"this is real text.\" . newline (). color ( Color . RED ) // \u5728\u5f53\u524dspannable dsl\u5185\uff0c\u6dfb\u52a0\u6362\u884c newline () } \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"Kotlin DSL"},{"location":"dsl/#_1","text":"spannable{ } \u521b\u5efa\u4e00\u4e2aSpannable DSL, \u53ef\u4ee5\u643a\u5e26receiver\u3002 // \u4e0d\u643a\u5e26receiver TextView . text = spannable { // \u7ed9bold text\u9644\u52a0\u7c97\u4f53\u53ca\u7ea2\u8272 // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"bold text\" . span { style ( Typeface . BOLD ) color ( Color . RED ) } // \u6dfb\u52a0\u4e0d\u5e26\u6837\u5f0f\u7684real text \"real text\" . text () } // \u643a\u5e26receiver TextView . text = \"receiver\" . spannable { // \u5bf9receiver\u8fdb\u884cspanned\u64cd\u4f5c style ( Typeface . ITALIC ) style ( Typeface . BOLD ) color ( Color . BLACK ) // \u5bf9text\u8fdb\u884cspanned\u64cd\u4f5c\u5e76\u9644\u52a0\u5728receiver\u540e\u9762 // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"text\" . span { style ( Typeface . BOLD ) color ( Color . RED ) } }","title":"\u6838\u5fc3\u65b9\u6cd5"},{"location":"dsl/#dsl","text":"\u4ee5\u4e0b\u65b9\u6cd5\u4e3a spannable \u5185\u90e8\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u5728 spannable DSL \u5185\u90e8\u8c03\u7528\u3002 CharSequence?.text() \u6dfb\u52a0\u4e00\u6bb5\u4e0d\u9644\u52a0\u6548\u679c\u7684\u6587\u672c TextView . text = spannable { \"this is real text.\" . text () } CharSequence?.span{ } \u6dfb\u52a0\u4e00\u4e2a\u9700\u8981\u6df7\u5408span\u7684DSL TextView . text = spannable { \"color text.\" . color ( Color . RED ) // span \u65b9\u6cd5\u53ef\u4ee5\u6df7\u5408\u591a\u4e2aSpan\u6548\u679c \"mix text.\" . span { style ( Typeface . ITALIC and Typeface . BOLD ) color ( Color . RED ) } } T?.newline(Int) \u82e5\u4e0d\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u4e00\u884c\u3002\u82e5\u4f20\u5165\u53c2\u6570\uff0c\u5219\u6362\u6307\u5b9a\u6570\u91cf\u884c\u3002\u6362\u884c\u64cd\u4f5c(\u4e5f\u53ef\u81ea\u884c\u4f7f\u7528 \\n )\u3002 \u82e5\u6709receiver\uff0c\u5c31\u5bf9receiver\u672b\u5c3e\u6dfb\u52a0 \\n \uff0c\u5e76\u8fd4\u56dereceiver\u3002 \u82e5\u65e0receiver\uff0c\u5c31\u76f4\u63a5\u5bf9\u5f53\u524dDSL\u5185\u8fdb\u884c\u6362\u884c\u3002 TextView . text = spannable { // \u5728\u6587\u672c\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26\uff0c\u5e76\u8fd4\u56de\u6587\u672c \"this is real text.\" . newline (). color ( Color . RED ) // \u5728\u5f53\u524dspannable dsl\u5185\uff0c\u6dfb\u52a0\u6362\u884c newline () }","title":"DSL\u5185\u9644\u52a0\u65b9\u6cd5"},{"location":"dsl/#_2","text":"\ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"\u5176\u5b83\u8bf4\u660e"},{"location":"image/","text":"SpnnableX \u901a\u8fc7 @liangjingkanji/spannable \u7684 CenterImageSpan \u548c GlideImageSpan \u9a71\u52a8\uff0c\u53ef\u4ee5\u5feb\u4fbf\u6377\u7684\u5b9e\u73b0\u56fe\u7247\u52a0\u8f7d\u3002 \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 \u00b6 /** \u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u4e0e\u9644\u52a0\u7684TextView(EditText)\u5b57\u4f53\u5927\u5c0f\u76f8\u540c */ useTextViewSize : TextView? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002\u4e0euseTextViewSize\u53c2\u6570\u51b2\u7a81\uff0c\u4e24\u8005\u90fd\u8d4b\u503c\u65f6\u4f18\u5148\u4f7f\u7528useTextViewSize */ size : DrawableSize? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5de6\u8fb9\u8ddd */ marginLeft : Int? = null , /** \u8bbe\u7f6e\u56fe\u7247\u53f3\u8fb9\u8ddd */ marginRight : Int? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5782\u76f4\u5bf9\u5176\u65b9\u5f0f\uff0c\u56fe\u7247\u9ed8\u8ba4\u5782\u76f4\u5c45\u4e2d\u5bf9\u9f50\u6587\u5b57: [Align.CENTER] */ align : CenterImageSpan . Align = CenterImageSpan . Align . CENTER , /** \u66ff\u6362\u89c4\u5219\uff08\u8be6\u89c1\u66ff\u6362\u89c4\u5219\u8bf4\u660e\uff09 */ replaceRule : Any? = null , image \u00b6 \u57fa\u4e8e CenterImageSpan \u9a71\u52a8 \u652f\u6301\u56fe\u7247\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3001\u56fe\u7247\u5bbd\u9ad8\u8bbe\u7f6e\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e \u82e5\u9700\u5e94\u5bf9\u66f4\u590d\u6742\u7684\u56fe\u7247\u52a0\u8f7d\u9700\u6c42\u8bf7\u4f7f\u7528glide \u5173\u8054\u65b9\u6cd5: image ( drawable : Drawable , source : String? = null , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , uri : Uri , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , @DrawableRes resourceId : Int , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , bitmap : Bitmap , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) \u4ee3\u7801\u793a\u4f8b: spannable { image ( requireContext (), R . mipmap . ic_launcher , size = 18. sp . drawableSize , marginLeft = 20. dp , marginRight = 10. dp , align = CenterImageSpan . Align . BOTTOM ) ... } glide \u00b6 \u57fa\u4e8e GlideImageSpan \u9a71\u52a8 \u4f7f\u7528Glide\u52a0\u8f7d\u56fe\u7247\u8d44\u6e90, \u8bf7\u5148\u4f9d\u8d56Glide \u652f\u6301\u56fe\u7247\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3001\u56fe\u7247\u5bbd\u9ad8\u8bbe\u7f6e\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e\u3001Gif\u52a8\u753b\u64ad\u653e \u5173\u8054\u65b9\u6cd5: /** * * @param view \u5f53\u524dSpan\u6240\u5728\u7684TextView * @param url \u56fe\u7247\u5730\u5740(\u4e0eGlide.load\u529f\u80fd\u76f8\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edcUrl) * @param loopCount GIF\u52a8\u753b\u64ad\u653e\u5faa\u73af\u6b21\u6570, \u9ed8\u8ba4\u65e0\u9650\u5faa\u73af * @param requestOption \u914d\u7f6eGlide\u8bf7\u6c42\u9009\u9879, \u4f8b\u5982\u5360\u4f4d\u56fe\u3001\u52a0\u8f7d\u5931\u8d25\u56fe\u7b49 * \u5982\u679c\u4f7f\u7528[RequestOptions.placeholder]\u5360\u4f4d\u56fe\u4f1a\u5bfc\u81f4\u9ed8\u8ba4\u4f7f\u7528\u5360\u4f4d\u56fe\u5bbd\u9ad8, \u9664\u975e\u4f60\u4f7f\u7528[setDrawableSize]\u8986\u76d6\u9ed8\u8ba4\u503c * \u9ed8\u8ba4\u4f1a\u4f7f\u7528[RequestOptions.fitCenterTransform]\u4fdd\u6301\u56fe\u7247\u7eb5\u6a2a\u6bd4\u4f8b\u4e0d\u53d8, \u5f53\u7136\u4f60\u53ef\u4ee5\u8986\u76d6\u8be5\u914d\u7f6e */ glide ( view : TextView , url : Any , loopCount : Int? , requestOption : RequestOptions?, ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) \u4ee3\u7801\u793a\u4f8b: spannable { glide ( viewBinding . tvSample , \"https://www.baidu.com/img/flexible/logo/pc/result.png\" , size = 24. sp . drawableSize , marginLeft = 20. dp , marginRight = 10. dp , align = CenterImageSpan . Align . BOTTOM ) ... } \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"\u56fe\u7247\u52a0\u8f7d"},{"location":"image/#_1","text":"/** \u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u4e0e\u9644\u52a0\u7684TextView(EditText)\u5b57\u4f53\u5927\u5c0f\u76f8\u540c */ useTextViewSize : TextView? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5927\u5c0f\u3002\u4e0euseTextViewSize\u53c2\u6570\u51b2\u7a81\uff0c\u4e24\u8005\u90fd\u8d4b\u503c\u65f6\u4f18\u5148\u4f7f\u7528useTextViewSize */ size : DrawableSize? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5de6\u8fb9\u8ddd */ marginLeft : Int? = null , /** \u8bbe\u7f6e\u56fe\u7247\u53f3\u8fb9\u8ddd */ marginRight : Int? = null , /** \u8bbe\u7f6e\u56fe\u7247\u5782\u76f4\u5bf9\u5176\u65b9\u5f0f\uff0c\u56fe\u7247\u9ed8\u8ba4\u5782\u76f4\u5c45\u4e2d\u5bf9\u9f50\u6587\u5b57: [Align.CENTER] */ align : CenterImageSpan . Align = CenterImageSpan . Align . CENTER , /** \u66ff\u6362\u89c4\u5219\uff08\u8be6\u89c1\u66ff\u6362\u89c4\u5219\u8bf4\u660e\uff09 */ replaceRule : Any? = null ,","title":"\u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570"},{"location":"image/#image","text":"\u57fa\u4e8e CenterImageSpan \u9a71\u52a8 \u652f\u6301\u56fe\u7247\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3001\u56fe\u7247\u5bbd\u9ad8\u8bbe\u7f6e\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e \u82e5\u9700\u5e94\u5bf9\u66f4\u590d\u6742\u7684\u56fe\u7247\u52a0\u8f7d\u9700\u6c42\u8bf7\u4f7f\u7528glide \u5173\u8054\u65b9\u6cd5: image ( drawable : Drawable , source : String? = null , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , uri : Uri , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , @DrawableRes resourceId : Int , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) image ( context : Context , bitmap : Bitmap , ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) \u4ee3\u7801\u793a\u4f8b: spannable { image ( requireContext (), R . mipmap . ic_launcher , size = 18. sp . drawableSize , marginLeft = 20. dp , marginRight = 10. dp , align = CenterImageSpan . Align . BOTTOM ) ... }","title":"image"},{"location":"image/#glide","text":"\u57fa\u4e8e GlideImageSpan \u9a71\u52a8 \u4f7f\u7528Glide\u52a0\u8f7d\u56fe\u7247\u8d44\u6e90, \u8bf7\u5148\u4f9d\u8d56Glide \u652f\u6301\u56fe\u7247\u5782\u76f4\u5bf9\u9f50\u65b9\u5f0f\u3001\u56fe\u7247\u5bbd\u9ad8\u8bbe\u7f6e\u3001\u56fe\u7247\u6c34\u5e73\u95f4\u8ddd\u8bbe\u7f6e\u3001Gif\u52a8\u753b\u64ad\u653e \u5173\u8054\u65b9\u6cd5: /** * * @param view \u5f53\u524dSpan\u6240\u5728\u7684TextView * @param url \u56fe\u7247\u5730\u5740(\u4e0eGlide.load\u529f\u80fd\u76f8\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528\u672c\u5730\u8d44\u6e90\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edcUrl) * @param loopCount GIF\u52a8\u753b\u64ad\u653e\u5faa\u73af\u6b21\u6570, \u9ed8\u8ba4\u65e0\u9650\u5faa\u73af * @param requestOption \u914d\u7f6eGlide\u8bf7\u6c42\u9009\u9879, \u4f8b\u5982\u5360\u4f4d\u56fe\u3001\u52a0\u8f7d\u5931\u8d25\u56fe\u7b49 * \u5982\u679c\u4f7f\u7528[RequestOptions.placeholder]\u5360\u4f4d\u56fe\u4f1a\u5bfc\u81f4\u9ed8\u8ba4\u4f7f\u7528\u5360\u4f4d\u56fe\u5bbd\u9ad8, \u9664\u975e\u4f60\u4f7f\u7528[setDrawableSize]\u8986\u76d6\u9ed8\u8ba4\u503c * \u9ed8\u8ba4\u4f1a\u4f7f\u7528[RequestOptions.fitCenterTransform]\u4fdd\u6301\u56fe\u7247\u7eb5\u6a2a\u6bd4\u4f8b\u4e0d\u53d8, \u5f53\u7136\u4f60\u53ef\u4ee5\u8986\u76d6\u8be5\u914d\u7f6e */ glide ( view : TextView , url : Any , loopCount : Int? , requestOption : RequestOptions?, ... \u56fe\u7247\u52a0\u8f7d\u901a\u7528\u53c2\u6570 ) \u4ee3\u7801\u793a\u4f8b: spannable { glide ( viewBinding . tvSample , \"https://www.baidu.com/img/flexible/logo/pc/result.png\" , size = 24. sp . drawableSize , marginLeft = 20. dp , marginRight = 10. dp , align = CenterImageSpan . Align . BOTTOM ) ... }","title":"glide"},{"location":"image/#_2","text":"\ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"\u5176\u5b83\u8bf4\u660e"},{"location":"replace/","text":"SpnnableX \u652f\u6301\u5f3a\u5927\u7684 Span \u6548\u679c\u66ff\u6362\uff0c\u53ca \u6587\u672c \u66ff\u6362\u3002 SpnnableX\u5185\u90e8\u7684Span\u6548\u679c\uff0c\u65e0\u8bba\u4f7f\u7528 DSL \u6216 \u94fe\u5f0f \uff0c\u90fd\u6709\u4e00\u4e2a replaceRule: Any? \u7684\u53c2\u6570 \u8be5\u53c2\u6570\u652f\u63019\u79cd\u7c7b\u578b: String \u3001 Array<String> \u3001 List<String> Regex \u3001 Array<Regex> \u3001 List<Regex> ReplaceRule \u3001 Array<ReplaceRule> \u3001 List<ReplaceRule> // dsl TextView . text = spannable { // \u53ea\u7ed9bold text\u9644\u52a0\u7c97\u4f53\u6548\u679c \"bold text, real text.\" . style ( Typeface . BOLD , \"bold text\" ) } // \u94fe\u5f0f TextView . text = Span . create () // \u53ea\u7ed9bold text\u9644\u52a0\u7c97\u4f53\u6548\u679c . text ( \"bold text, real text.\" ). style ( Typeface . BOLD , \"bold text\" ) . spannable () String \u00b6 \u5f53 replaceRule: Any? \u4f20\u5165\u7684\u7c7b\u578b\u4e3a String \u6216 Array<String> List<String> \u65f6\uff0c\u4f1a\u5bfb\u627e\u4f20\u5165\u7684\u6587\u672c\uff0c\u5e76\u66ff\u6362\u6307\u5b9aSpan\u6548\u679c\u3002 TextView . text = spannable { // \u53ea\u7ed9bold text\u9644\u52a0\u7c97\u4f53\u6548\u679c \"bold text, real text.\" . style ( Typeface . BOLD , \"bold text\" ) } Array<String> & List<string> \u793a\u4f8b: kotlin TextView . text = spannable { // \u7ed9bold text\u548c\u7c97\u4f53\u6587\u672c\u9644\u52a0\u7c97\u4f53\u6548\u679c \"1. bold text, real text. \u7c97\u4f53\u6587\u672c\" . style ( Typeface . BOLD , arrayof ( \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" )) \"2. bold text, real text. \u7c97\u4f53\u6587\u672c\" . style ( Typeface . BOLD , listof ( \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" )) } Java List & lt ; String & gt ; replaceList = new ArrayList & lt ; & gt ;(); replaceList . add ( \"bold text\" ); replaceList . add ( \"\u7c97\u4f53\u6587\u672c\" ); TextView . setText ( Span . create () // \u7ed9bold text\u548c\u7c97\u4f53\u6587\u672c\u9644\u52a0\u7c97\u4f53\u6548\u679c . text ( \"1. bold text, real text. \u7c97\u4f53\u6587\u672c\" ) . style ( Typeface . BOLD , new String [] { \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" }) . text ( \"2. bold text, real text. \u7c97\u4f53\u6587\u672c\" ) . style ( Typeface . BOLD , replaceList ) . spannable () ); Regex\u6b63\u5219 \u00b6 \u5f53 replaceRule: Any? \u4f20\u5165\u7684\u7c7b\u578b\u4e3a Regex \u6216 Array<Regex> List<Regex> \u65f6\uff0c\u4f1a\u5bfb\u627e\u4f20\u5165\u7684\u6b63\u5219\uff0c\u5e76\u66ff\u6362\u6307\u5b9aSpan\u6548\u679c\u3002 TextView . text = spannable { // \u53ea\u7ed9\u90ae\u7bb1\u8bbe\u7f6e\u7ea2\u8272\u6587\u672c \"email: spannablex@itxca.com or github@itxca.com\" . color ( Color . RED , \"\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\" . toRegex ()) } Array<Regex> & List<Regex> \u53ef\u53c2\u8003 String \u66ff\u6362\u7684\u6570\u7ec4\u53ca\u5217\u8868\u64cd\u4f5c\u3002 ReplaceRule \u00b6 SpannableX \u5b9a\u4e49\u7684\u66ff\u6362\u89c4\u5219\uff0c\u53ef\u4f7f\u7528 String.toReplaceRule() \u6216 Span.toReplaceRule() (Java\u4f7f\u7528)\u6784\u5efa\u3002 // Kotlin\u6269\u5c55\u65b9\u6cd5 \"bold\" . toReplaceRule () // Java\u53ef\u4f7f\u7528Span\u7684\u9759\u6001\u65b9\u6cd5 Span . toReplaceRule ( \"bold\" ) ReplaceRule \u7684\u9644\u52a0\u53c2\u6570\u4e3a \u672a\u63a5\u89e6\u8fc7Kotlin\u7684\u5f00\u53d1\u8005\u8bf4\u660e\uff0c\u7c7b\u578b\u540e\u9762\u5e26?\u7684\u5b9a\u4e49\u662f\u53ef\u7a7a\u7c7b\u578b\u3002\u76f8\u5f53\u4e8e @Nullable \"bold\" . toReplaceRule ( // \u6269\u5c55\u65b9\u6cd5receiver \u6216 Span.toReplaceRule\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5426\u4e3a\u6b63\u5219 isRegex : Boolean = false , // \u5355\u4e00\u5339\u914d\u4f4d\u7f6e \u82e5\u4e0b\u4e00\u4e2a\u53c2\u6570matchRange\u4e0d\u4e3anull\u65f6\uff0c\u4f18\u5148\u4f7f\u7528matchRange // \u4e0b\u6807\u4ece0\u5f00\u59cb matchIndex : Int? = null , // \u5339\u914d\u8303\u56f4\uff0cnull\u5219\u5339\u914d\u5168\u90e8 // \u4e0b\u6807\u4ece0\u5f00\u59cb matchRange : IntRange? = null , // \u5339\u914d\u5230\u540e\u662f\u5426\u66ff\u6362\u6587\u672c(null \u4e3a\u4e0d\u66ff\u6362) newString : CharSequence? = null , // \u6709\u5339\u914d\u9879\u65f6\u56de\u8c03 replacementMatch : OnSpanReplacementMatch? = null ) \u793a\u4f8b TextView . text = spannable { // \u67e5\u627e\u7b2c1\u4e2a`SpannableX`\uff0c\u66ff\u6362\u6587\u672c\u6548\u679c\u4e3a\u7ea2\u8272\u3001\u52a0\u7c97\u3001\u659c\u4f53\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09 \"SpannableX and SpannableX or SpannableX\" . span ( \"SpannableX\" . toReplaceRule ( matchIndex = 1 )) { color ( Color . RED ) style ( Typeface . BOLD and Typeface . ITALIC ) } newline ( 2 ) \"SpannableX text text text\" . color ( Color . BLUE , arrayOf ( // \u67e5\u627e\u7b2c1\u5230\u7b2c2\u4e2a`text`\uff0c\u6587\u672c\u66ff\u6362\u4e3a\u84dd\u8272\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09 \"text\" . toReplaceRule ( matchRange = 1. . 2 ), // \u4e14\u7b2c\u5339\u914d\u5230\u7684\u7b2c2\u4e2a`text`\u6587\u672c\u66ff\u6362\u4e3a`newText` \"text\" . toReplaceRule ( matchIndex = 2 , newString = \"newText\" ) ) ) newline ( 2 ) \"\"\" Regex\u6b63\u5219 \u6b63\u5219\u8868\u8fbe\u5f0f(regular expression)\u63cf\u8ff0\u4e86\u4e00\u79cd\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6a21\u5f0f\uff08pattern\uff09\u3002\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u4e32\u662f\u5426\u542b\u6709\u67d0\u79cd\u5b50\u4e32\u3001\u5c06\u5339\u914d\u7684\u5b50\u4e32\u66ff\u6362\u6216\u8005\u4ece\u67d0\u4e2a\u4e32\u4e2d\u53d6\u51fa\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u7684\u5b50\u4e32\u7b49\u3002 \"\"\" . trimIndent (). span { // \u67e5\u627e\u5168\u90e8`Regex\u6b63\u5219`\u66ff\u6362\u4e3a\u84dd\u8272 style ( Typeface . BOLD , \"Regex\u6b63\u5219\" . toReplaceRule ()) // \u67e5\u627e\u4e2d\u6587\uff0c\u6dfb\u52a0\u80cc\u666f\u8272 background ( \"#e3e3e3\" . color , \"[\\\\u4e00-\\\\u9fa5]+\" . toReplaceRule ( true )) // \u67e5\u627e\u7b2c0\u4e2a`\u6b63\u5219`\u548c\u5168\u90e8\u7684`\u4e32`\u66ff\u6362\u4e3a\u7ea2\u8272 color ( Color . RED , arrayOf ( \"\u6b63\u5219\" . toReplaceRule ( matchIndex = 0 ), \"\u4e32\" . toReplaceRule () ) ) } } Array<ReplaceRule> & List<ReplaceRule> \u53ef\u53c2\u8003 String \u66ff\u6362\u7684\u6570\u7ec4\u53ca\u5217\u8868\u64cd\u4f5c\u3002 \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"\u66ff\u6362\u89c4\u5219"},{"location":"replace/#string","text":"\u5f53 replaceRule: Any? \u4f20\u5165\u7684\u7c7b\u578b\u4e3a String \u6216 Array<String> List<String> \u65f6\uff0c\u4f1a\u5bfb\u627e\u4f20\u5165\u7684\u6587\u672c\uff0c\u5e76\u66ff\u6362\u6307\u5b9aSpan\u6548\u679c\u3002 TextView . text = spannable { // \u53ea\u7ed9bold text\u9644\u52a0\u7c97\u4f53\u6548\u679c \"bold text, real text.\" . style ( Typeface . BOLD , \"bold text\" ) } Array<String> & List<string> \u793a\u4f8b: kotlin TextView . text = spannable { // \u7ed9bold text\u548c\u7c97\u4f53\u6587\u672c\u9644\u52a0\u7c97\u4f53\u6548\u679c \"1. bold text, real text. \u7c97\u4f53\u6587\u672c\" . style ( Typeface . BOLD , arrayof ( \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" )) \"2. bold text, real text. \u7c97\u4f53\u6587\u672c\" . style ( Typeface . BOLD , listof ( \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" )) } Java List & lt ; String & gt ; replaceList = new ArrayList & lt ; & gt ;(); replaceList . add ( \"bold text\" ); replaceList . add ( \"\u7c97\u4f53\u6587\u672c\" ); TextView . setText ( Span . create () // \u7ed9bold text\u548c\u7c97\u4f53\u6587\u672c\u9644\u52a0\u7c97\u4f53\u6548\u679c . text ( \"1. bold text, real text. \u7c97\u4f53\u6587\u672c\" ) . style ( Typeface . BOLD , new String [] { \"bold text\" , \"\u7c97\u4f53\u6587\u672c\" }) . text ( \"2. bold text, real text. \u7c97\u4f53\u6587\u672c\" ) . style ( Typeface . BOLD , replaceList ) . spannable () );","title":"String"},{"location":"replace/#regex","text":"\u5f53 replaceRule: Any? \u4f20\u5165\u7684\u7c7b\u578b\u4e3a Regex \u6216 Array<Regex> List<Regex> \u65f6\uff0c\u4f1a\u5bfb\u627e\u4f20\u5165\u7684\u6b63\u5219\uff0c\u5e76\u66ff\u6362\u6307\u5b9aSpan\u6548\u679c\u3002 TextView . text = spannable { // \u53ea\u7ed9\u90ae\u7bb1\u8bbe\u7f6e\u7ea2\u8272\u6587\u672c \"email: spannablex@itxca.com or github@itxca.com\" . color ( Color . RED , \"\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*\" . toRegex ()) } Array<Regex> & List<Regex> \u53ef\u53c2\u8003 String \u66ff\u6362\u7684\u6570\u7ec4\u53ca\u5217\u8868\u64cd\u4f5c\u3002","title":"Regex\u6b63\u5219"},{"location":"replace/#replacerule","text":"SpannableX \u5b9a\u4e49\u7684\u66ff\u6362\u89c4\u5219\uff0c\u53ef\u4f7f\u7528 String.toReplaceRule() \u6216 Span.toReplaceRule() (Java\u4f7f\u7528)\u6784\u5efa\u3002 // Kotlin\u6269\u5c55\u65b9\u6cd5 \"bold\" . toReplaceRule () // Java\u53ef\u4f7f\u7528Span\u7684\u9759\u6001\u65b9\u6cd5 Span . toReplaceRule ( \"bold\" ) ReplaceRule \u7684\u9644\u52a0\u53c2\u6570\u4e3a \u672a\u63a5\u89e6\u8fc7Kotlin\u7684\u5f00\u53d1\u8005\u8bf4\u660e\uff0c\u7c7b\u578b\u540e\u9762\u5e26?\u7684\u5b9a\u4e49\u662f\u53ef\u7a7a\u7c7b\u578b\u3002\u76f8\u5f53\u4e8e @Nullable \"bold\" . toReplaceRule ( // \u6269\u5c55\u65b9\u6cd5receiver \u6216 Span.toReplaceRule\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5426\u4e3a\u6b63\u5219 isRegex : Boolean = false , // \u5355\u4e00\u5339\u914d\u4f4d\u7f6e \u82e5\u4e0b\u4e00\u4e2a\u53c2\u6570matchRange\u4e0d\u4e3anull\u65f6\uff0c\u4f18\u5148\u4f7f\u7528matchRange // \u4e0b\u6807\u4ece0\u5f00\u59cb matchIndex : Int? = null , // \u5339\u914d\u8303\u56f4\uff0cnull\u5219\u5339\u914d\u5168\u90e8 // \u4e0b\u6807\u4ece0\u5f00\u59cb matchRange : IntRange? = null , // \u5339\u914d\u5230\u540e\u662f\u5426\u66ff\u6362\u6587\u672c(null \u4e3a\u4e0d\u66ff\u6362) newString : CharSequence? = null , // \u6709\u5339\u914d\u9879\u65f6\u56de\u8c03 replacementMatch : OnSpanReplacementMatch? = null ) \u793a\u4f8b TextView . text = spannable { // \u67e5\u627e\u7b2c1\u4e2a`SpannableX`\uff0c\u66ff\u6362\u6587\u672c\u6548\u679c\u4e3a\u7ea2\u8272\u3001\u52a0\u7c97\u3001\u659c\u4f53\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09 \"SpannableX and SpannableX or SpannableX\" . span ( \"SpannableX\" . toReplaceRule ( matchIndex = 1 )) { color ( Color . RED ) style ( Typeface . BOLD and Typeface . ITALIC ) } newline ( 2 ) \"SpannableX text text text\" . color ( Color . BLUE , arrayOf ( // \u67e5\u627e\u7b2c1\u5230\u7b2c2\u4e2a`text`\uff0c\u6587\u672c\u66ff\u6362\u4e3a\u84dd\u8272\uff08\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09 \"text\" . toReplaceRule ( matchRange = 1. . 2 ), // \u4e14\u7b2c\u5339\u914d\u5230\u7684\u7b2c2\u4e2a`text`\u6587\u672c\u66ff\u6362\u4e3a`newText` \"text\" . toReplaceRule ( matchIndex = 2 , newString = \"newText\" ) ) ) newline ( 2 ) \"\"\" Regex\u6b63\u5219 \u6b63\u5219\u8868\u8fbe\u5f0f(regular expression)\u63cf\u8ff0\u4e86\u4e00\u79cd\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6a21\u5f0f\uff08pattern\uff09\u3002\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u4e32\u662f\u5426\u542b\u6709\u67d0\u79cd\u5b50\u4e32\u3001\u5c06\u5339\u914d\u7684\u5b50\u4e32\u66ff\u6362\u6216\u8005\u4ece\u67d0\u4e2a\u4e32\u4e2d\u53d6\u51fa\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u7684\u5b50\u4e32\u7b49\u3002 \"\"\" . trimIndent (). span { // \u67e5\u627e\u5168\u90e8`Regex\u6b63\u5219`\u66ff\u6362\u4e3a\u84dd\u8272 style ( Typeface . BOLD , \"Regex\u6b63\u5219\" . toReplaceRule ()) // \u67e5\u627e\u4e2d\u6587\uff0c\u6dfb\u52a0\u80cc\u666f\u8272 background ( \"#e3e3e3\" . color , \"[\\\\u4e00-\\\\u9fa5]+\" . toReplaceRule ( true )) // \u67e5\u627e\u7b2c0\u4e2a`\u6b63\u5219`\u548c\u5168\u90e8\u7684`\u4e32`\u66ff\u6362\u4e3a\u7ea2\u8272 color ( Color . RED , arrayOf ( \"\u6b63\u5219\" . toReplaceRule ( matchIndex = 0 ), \"\u4e32\" . toReplaceRule () ) ) } } Array<ReplaceRule> & List<ReplaceRule> \u53ef\u53c2\u8003 String \u66ff\u6362\u7684\u6570\u7ec4\u53ca\u5217\u8868\u64cd\u4f5c\u3002","title":"ReplaceRule"},{"location":"replace/#_1","text":"\ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span \ud83d\udc49 Kotlin|Java \u94fe\u5f0f Sample: JavaSample \ud83d\udc49 Kotlin DSL Sample: KotlinSample","title":"\u5176\u5b83\u8bf4\u660e"},{"location":"spans/","text":"\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c SpannableX \u91cc\u4e8c\u6b21\u5c01\u88c5\u4e86\u7cfb\u7edf\u7684\u5e38\u7528Span\u3002 \u8fd9\u4e9b\u65b9\u6cd5\u5728 Kotlin DSL \u53ca Kotlin\\Java \u94fe\u5f0f \u8c03\u7528\u91cc\uff0c\u4f7f\u7528\u4e86\u540c\u6837\u7684\u65b9\u6cd5\u540d\u53ca\u53c2\u6570\u3002 \u5e38\u7528Span\u793a\u4f8b \u00b6 TextView . text = spannable { \"bold red text.\" . span { // \u53c2\u89c1\u4e0b\u65b9`\u5b8c\u6574Span\u8bf4\u660e`\u7684style\u65b9\u6cd5 style ( Typeface . BOLD ) // \u53c2\u89c1\u4e0b\u65b9`\u5b8c\u6574Span\u8bf4\u660e`\u7684color\u65b9\u6cd5 color ( Color . RED ) } } \u5b8c\u6574Span\u8bf4\u660e \u00b6 \u6240\u6709\u7684 CharacterStyle \u65b9\u6cd5\uff0c\u90fd\u5e26\u6709 replaceRule \u66ff\u6362\u89c4\u5219\u53c2\u6570\uff0c\u5bf9\u4e8e\u66ff\u6362\u89c4\u5219\u8be6\u89e3\uff0c\u8bf7\u67e5\u770b \u66ff\u6362\u89c4\u5219 \u8bf4\u660e\u3002 \u5bf9\u4e8e\u5185\u7f6e\u7684 ParagraphStyle \uff0c\u7531\u4e8e\u662f\u5bf9\u6bb5\u843d\u8fdb\u884c\u64cd\u4f5c\uff0c\u90fd\u4e0d\u652f\u6301 replaceRule \u66ff\u6362\u89c4\u5219\u53c2\u6570\u3002 \u8fd9\u91cc\u53ea\u5217\u51fa\u65b9\u6cd5\u540d\u53ca\u6548\u679c\u8bf4\u660e\uff0c\u8be6\u7ec6\u53c2\u6570\u8bf4\u660e\u53ef\u67e5\u770b API\u6587\u6863 \u6216\u67e5\u770b Sample \u3002 \u65b9\u6cd5 \u6548\u679c\u8bf4\u660e \u5bf9\u5e94Span \u6548\u679c\u793a\u4f8b style() \u8bbe\u7f6e\u6587\u672c\u6837\u5f0f StyleSpan typeface() \u8bbe\u7f6e\u5b57\u4f53\u6837\u5f0f TypefaceSpan textAppearance() \u8bbe\u7f6e\u5b57\u4f53\u6548\u679c TextAppearanceSpan color() \u6587\u672c\u989c\u8272 ForegroundColorSpan background() \u80cc\u666f\u989c\u8272 BackgroundColorSpan image() \u56fe\u7247 CenterImageSpan glide() Glide\u52a0\u8f7d\u56fe\u7247 GlideImageSpan scaleX() X\u8f74\u6587\u672c\u7f29\u653e ScaleXSpan maskFilter() \u6587\u672c\u8499\u7248\u6548\u679c MaskFilterSpan blurMask() \u6587\u672c\u6a21\u7cca\u6ee4\u955c\u8499\u7248\u6548\u679c BlurMaskFilter superscript() \u6587\u672c\u4e0a\u6807 SuperscriptSpan subscript() \u6587\u672c\u4e0b\u6807 SubscriptSpan absoluteSize() \u6587\u672c\u7edd\u5bf9\u5927\u5c0f AbsoluteSizeSpan relativeSize() \u6587\u672c\u76f8\u5bf9\u5927\u5c0f RelativeSizeSpan strikethrough() \u5220\u9664\u7ebf StrikethroughSpan underline() \u4e0b\u5212\u7ebf UnderlineSpan url() \u8d85\u94fe\u63a5 URLSpan suggestion() \u6587\u672c\u8f93\u5165\u63d0\u793a SuggestionSpan clickable() \u53ef\u70b9\u51fb\u6587\u672c SimpleClickableSpan margin() \u6587\u672c\u95f4\u8ddd MarginSpan quote() \u6bb5\u843d\u5f15\u7528\u6837\u5f0f(\u6bb5\u843d\u524d\u7ad6\u7ebf\u6807\u8bc6) QuoteSpan LegacyQuoteSpan bullet() \u6bb5\u843d\u9879\u76ee\u7b26\u53f7(\u6bb5\u843d\u524d\u5706\u5f62\u6807\u8bc6) BulletSpan LegacyBulletSpan alignment() \u6bb5\u843d\u5bf9\u9f50\u65b9\u5f0f AlignmentSpan.Standard lineBackground() \u6bb5\u843d\u80cc\u666f\u989c\u8272 LineBackgroundSpan.Standard LegacyLineBackgroundSpan leadingMargin() \u6bb5\u843d\u6587\u672c\u7f29\u8fdb LeadingMarginSpan lineHeight() \u6bb5\u843d\u884c\u9ad8 LineHeightSpan.Standard LegacyLineHeightSpan imageParagraph() \u6bb5\u843d\u56fe\u7247 ParagraphBitmapSpan ParagraphDrawableSpan \u4f7f\u7528\u81ea\u5b9a\u4e49Span \u00b6 \u5bf9\u4e8e\u672a\u5185\u7f6e\u7684 Span \u6216\u81ea\u5b9a\u4e49\u7684 Span \uff0c\u53ef\u4ee5\u4f7f\u7528 custom \u65b9\u6cd5\u5feb\u901f\u96c6\u6210\u53ca\u4f7f\u7528 CharacterStyle & ParagraphStyle . kotlin TextView . text = spannable { \" custom\" . custom ( ForegroundColorSpan ( Color . RED )) } java TextView . setText ( Span . create () . text ( \" .custom()\" ). custom ( new ForegroundColorSpan ( Color . RED )) . spannable ()); \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u672c\u5730\u3001\u7f51\u7edc\u3001Gif\u56fe\u7247\u52a0\u8f7d: \u56fe\u7247\u52a0\u8f7d \ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219","title":"\u5e38\u7528Span"},{"location":"spans/#span","text":"TextView . text = spannable { \"bold red text.\" . span { // \u53c2\u89c1\u4e0b\u65b9`\u5b8c\u6574Span\u8bf4\u660e`\u7684style\u65b9\u6cd5 style ( Typeface . BOLD ) // \u53c2\u89c1\u4e0b\u65b9`\u5b8c\u6574Span\u8bf4\u660e`\u7684color\u65b9\u6cd5 color ( Color . RED ) } }","title":"\u5e38\u7528Span\u793a\u4f8b"},{"location":"spans/#span_1","text":"\u6240\u6709\u7684 CharacterStyle \u65b9\u6cd5\uff0c\u90fd\u5e26\u6709 replaceRule \u66ff\u6362\u89c4\u5219\u53c2\u6570\uff0c\u5bf9\u4e8e\u66ff\u6362\u89c4\u5219\u8be6\u89e3\uff0c\u8bf7\u67e5\u770b \u66ff\u6362\u89c4\u5219 \u8bf4\u660e\u3002 \u5bf9\u4e8e\u5185\u7f6e\u7684 ParagraphStyle \uff0c\u7531\u4e8e\u662f\u5bf9\u6bb5\u843d\u8fdb\u884c\u64cd\u4f5c\uff0c\u90fd\u4e0d\u652f\u6301 replaceRule \u66ff\u6362\u89c4\u5219\u53c2\u6570\u3002 \u8fd9\u91cc\u53ea\u5217\u51fa\u65b9\u6cd5\u540d\u53ca\u6548\u679c\u8bf4\u660e\uff0c\u8be6\u7ec6\u53c2\u6570\u8bf4\u660e\u53ef\u67e5\u770b API\u6587\u6863 \u6216\u67e5\u770b Sample \u3002 \u65b9\u6cd5 \u6548\u679c\u8bf4\u660e \u5bf9\u5e94Span \u6548\u679c\u793a\u4f8b style() \u8bbe\u7f6e\u6587\u672c\u6837\u5f0f StyleSpan typeface() \u8bbe\u7f6e\u5b57\u4f53\u6837\u5f0f TypefaceSpan textAppearance() \u8bbe\u7f6e\u5b57\u4f53\u6548\u679c TextAppearanceSpan color() \u6587\u672c\u989c\u8272 ForegroundColorSpan background() \u80cc\u666f\u989c\u8272 BackgroundColorSpan image() \u56fe\u7247 CenterImageSpan glide() Glide\u52a0\u8f7d\u56fe\u7247 GlideImageSpan scaleX() X\u8f74\u6587\u672c\u7f29\u653e ScaleXSpan maskFilter() \u6587\u672c\u8499\u7248\u6548\u679c MaskFilterSpan blurMask() \u6587\u672c\u6a21\u7cca\u6ee4\u955c\u8499\u7248\u6548\u679c BlurMaskFilter superscript() \u6587\u672c\u4e0a\u6807 SuperscriptSpan subscript() \u6587\u672c\u4e0b\u6807 SubscriptSpan absoluteSize() \u6587\u672c\u7edd\u5bf9\u5927\u5c0f AbsoluteSizeSpan relativeSize() \u6587\u672c\u76f8\u5bf9\u5927\u5c0f RelativeSizeSpan strikethrough() \u5220\u9664\u7ebf StrikethroughSpan underline() \u4e0b\u5212\u7ebf UnderlineSpan url() \u8d85\u94fe\u63a5 URLSpan suggestion() \u6587\u672c\u8f93\u5165\u63d0\u793a SuggestionSpan clickable() \u53ef\u70b9\u51fb\u6587\u672c SimpleClickableSpan margin() \u6587\u672c\u95f4\u8ddd MarginSpan quote() \u6bb5\u843d\u5f15\u7528\u6837\u5f0f(\u6bb5\u843d\u524d\u7ad6\u7ebf\u6807\u8bc6) QuoteSpan LegacyQuoteSpan bullet() \u6bb5\u843d\u9879\u76ee\u7b26\u53f7(\u6bb5\u843d\u524d\u5706\u5f62\u6807\u8bc6) BulletSpan LegacyBulletSpan alignment() \u6bb5\u843d\u5bf9\u9f50\u65b9\u5f0f AlignmentSpan.Standard lineBackground() \u6bb5\u843d\u80cc\u666f\u989c\u8272 LineBackgroundSpan.Standard LegacyLineBackgroundSpan leadingMargin() \u6bb5\u843d\u6587\u672c\u7f29\u8fdb LeadingMarginSpan lineHeight() \u6bb5\u843d\u884c\u9ad8 LineHeightSpan.Standard LegacyLineHeightSpan imageParagraph() \u6bb5\u843d\u56fe\u7247 ParagraphBitmapSpan ParagraphDrawableSpan","title":"\u5b8c\u6574Span\u8bf4\u660e"},{"location":"spans/#span_2","text":"\u5bf9\u4e8e\u672a\u5185\u7f6e\u7684 Span \u6216\u81ea\u5b9a\u4e49\u7684 Span \uff0c\u53ef\u4ee5\u4f7f\u7528 custom \u65b9\u6cd5\u5feb\u901f\u96c6\u6210\u53ca\u4f7f\u7528 CharacterStyle & ParagraphStyle . kotlin TextView . text = spannable { \" custom\" . custom ( ForegroundColorSpan ( Color . RED )) } java TextView . setText ( Span . create () . text ( \" .custom()\" ). custom ( new ForegroundColorSpan ( Color . RED )) . spannable ());","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49Span"},{"location":"spans/#_1","text":"\ud83d\udc49 \u672c\u5730\u3001\u7f51\u7edc\u3001Gif\u56fe\u7247\u52a0\u8f7d: \u56fe\u7247\u52a0\u8f7d \ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219","title":"\u5176\u5b83\u8bf4\u660e"},{"location":"utils/","text":"SpannableX \u9664\u4e86\u63d0\u4f9b\u5f3a\u5927\u7684Span\u6548\u679c\u53ca\u66ff\u6362\u89c4\u5219\u5916\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528Span\u800c\u6dfb\u52a0\u7684\u8f85\u52a9\u65b9\u6cd5\u3002 CharSequence.removeSpans<T>() \u00b6 \u5220\u9664\u6307\u5b9aSpan\u6548\u679c \u7cfb\u7edf\u7684removeSpan\u53ea\u80fd\u5220\u9664\u5355\u4e2aSpan\u3002\u800cclearSpans\u5219\u4f1a\u5bfc\u81f4\u5149\u6807\u7b49\u95ee\u9898\u3002 Kotlin // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 EditText . text . removeSpans < BackgroundColorSpan > () // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . run { text = text . removeSpans < BackgroundColorSpan > () } Java // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 Span . removeSpans ( EditText . getText (), BackgroundColorSpan . class ); // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . setText ( Span . removeSpans ( TextView . getText (), BackgroundColorSpan . class )); CharSequence.removeAllSpans() \u00b6 \u5220\u9664\u5168\u90e8Span\u6548\u679c Kotlin // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 EditText . text . removeAllSpans () // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . run { text = text . removeAllSpans () } Java // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 Span . removeAllSpans ( EditText . getText ()); // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . setText ( Span . removeAllSpans ( TextView . getText ()); TextView.activateClick(Boolean) \u00b6 \u53c2\u6570\u4e3a\u662f\u5426\u663e\u793a\u70b9\u51fb\u80cc\u666f\u8272 TextView \u6fc0\u6d3b\u70b9\u51fb\uff0c\u914d\u5408\u5e38\u7528Span\u4e2d\u7684 \ud83d\udc49 clickable \u5904\u7406\u70b9\u51fb\u3002 Kotlin TextView . activateClick (). text = \"Github: \" . span + \"https://github.com/TxcA/SpannableX/\" . spannable { url ( \"https://github.com/TxcA/SpannableX/\" ) } Java Span . activateClick ( TextView ). setText ( Span . create () . text ( \"Github: \" ) . text ( \"https://github.com/TxcA/SpannableX/\" ). url ( \"https://github.com/TxcA/SpannableX/\" ) . spannable ()); Tips: TextView autoLink\u77e5\u8bc6\u70b9 \u5e38\u7528\u7684\u7f51\u5740\u3001\u7535\u8bdd\u7b49\u70b9\u51fb\u65b9\u5f0f\uff0c\u7cfb\u7edf\u81ea\u5e26\u4e86 autoLinkMask \u7684\u65b9\u6cd5\uff0c\u65e0\u9700\u4f7f\u7528 activateClick \u548c url \u3002 \u7cfb\u7edf\u4f1a\u901a\u8fc7\u8bbe\u7f6e\u7684 autoLinkMask \u81ea\u52a8\u8bc6\u522b\u5e76\u5904\u7406\u70b9\u51fb\u3002 \u65b9\u5f0f\u4e00\u3001xml\u76f4\u63a5\u914d\u7f6e <TextView android:id= \"@+id/tv_sample\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"8dp\" android:autoLink= \"web\" android:text= \"https://github.com/TxcA/SpannableX/\" android:textSize= \"14sp\" /> \u65b9\u5f0f\u4e8c\u3001\u4ee3\u7801\u914d\u7f6e // Kotlin TextView . apply { autoLinkMask = Linkify . WEB_URLS text = \"https://github.com/TxcA/SpannableX/\" } // Java TextView . setAutoLinkMask ( Linkify . WEB_URLS ); TextView . setText ( \"https://github.com/TxcA/SpannableX/\" ); \u8fd9\u4e9b\u7279\u6027\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\uff0c\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u5904\u7406\u5e38\u7528\u70b9\u51fb\u3002 String.color \u00b6 StringColor \u8f6c ColorInt Kotlin \u6269\u5c55\u65b9\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u4e86 Color.parseColor() val color : Int = \"#aaaaaa\" . color \u5176\u5b83\u8bf4\u660e \u00b6 \ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span","title":"\u8f85\u52a9\u65b9\u6cd5"},{"location":"utils/#charsequenceremovespanst","text":"\u5220\u9664\u6307\u5b9aSpan\u6548\u679c \u7cfb\u7edf\u7684removeSpan\u53ea\u80fd\u5220\u9664\u5355\u4e2aSpan\u3002\u800cclearSpans\u5219\u4f1a\u5bfc\u81f4\u5149\u6807\u7b49\u95ee\u9898\u3002 Kotlin // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 EditText . text . removeSpans < BackgroundColorSpan > () // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . run { text = text . removeSpans < BackgroundColorSpan > () } Java // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 Span . removeSpans ( EditText . getText (), BackgroundColorSpan . class ); // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . setText ( Span . removeSpans ( TextView . getText (), BackgroundColorSpan . class ));","title":"CharSequence.removeSpans&lt;T&gt;()"},{"location":"utils/#charsequenceremoveallspans","text":"\u5220\u9664\u5168\u90e8Span\u6548\u679c Kotlin // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 EditText . text . removeAllSpans () // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . run { text = text . removeAllSpans () } Java // \u53ef\u53d8Spannable (\u5982EditText)\uff0c\u53ef\u76f4\u63a5\u8c03\u7528 Span . removeAllSpans ( EditText . getText ()); // \u4e0d\u53ef\u53d8Spanned (\u5982TextView)\uff0c\u9700\u8981\u91cd\u65b0\u8d4b\u503c TextView . setText ( Span . removeAllSpans ( TextView . getText ());","title":"CharSequence.removeAllSpans()"},{"location":"utils/#textviewactivateclickboolean","text":"\u53c2\u6570\u4e3a\u662f\u5426\u663e\u793a\u70b9\u51fb\u80cc\u666f\u8272 TextView \u6fc0\u6d3b\u70b9\u51fb\uff0c\u914d\u5408\u5e38\u7528Span\u4e2d\u7684 \ud83d\udc49 clickable \u5904\u7406\u70b9\u51fb\u3002 Kotlin TextView . activateClick (). text = \"Github: \" . span + \"https://github.com/TxcA/SpannableX/\" . spannable { url ( \"https://github.com/TxcA/SpannableX/\" ) } Java Span . activateClick ( TextView ). setText ( Span . create () . text ( \"Github: \" ) . text ( \"https://github.com/TxcA/SpannableX/\" ). url ( \"https://github.com/TxcA/SpannableX/\" ) . spannable ()); Tips: TextView autoLink\u77e5\u8bc6\u70b9 \u5e38\u7528\u7684\u7f51\u5740\u3001\u7535\u8bdd\u7b49\u70b9\u51fb\u65b9\u5f0f\uff0c\u7cfb\u7edf\u81ea\u5e26\u4e86 autoLinkMask \u7684\u65b9\u6cd5\uff0c\u65e0\u9700\u4f7f\u7528 activateClick \u548c url \u3002 \u7cfb\u7edf\u4f1a\u901a\u8fc7\u8bbe\u7f6e\u7684 autoLinkMask \u81ea\u52a8\u8bc6\u522b\u5e76\u5904\u7406\u70b9\u51fb\u3002 \u65b9\u5f0f\u4e00\u3001xml\u76f4\u63a5\u914d\u7f6e <TextView android:id= \"@+id/tv_sample\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:layout_marginTop= \"8dp\" android:autoLink= \"web\" android:text= \"https://github.com/TxcA/SpannableX/\" android:textSize= \"14sp\" /> \u65b9\u5f0f\u4e8c\u3001\u4ee3\u7801\u914d\u7f6e // Kotlin TextView . apply { autoLinkMask = Linkify . WEB_URLS text = \"https://github.com/TxcA/SpannableX/\" } // Java TextView . setAutoLinkMask ( Linkify . WEB_URLS ); TextView . setText ( \"https://github.com/TxcA/SpannableX/\" ); \u8fd9\u4e9b\u7279\u6027\u662f\u7cfb\u7edf\u81ea\u5e26\u7684\uff0c\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u5904\u7406\u5e38\u7528\u70b9\u51fb\u3002","title":"TextView.activateClick(Boolean)"},{"location":"utils/#stringcolor","text":"StringColor \u8f6c ColorInt Kotlin \u6269\u5c55\u65b9\u6cd5\uff0c\u5176\u5b9e\u4e5f\u662f\u8c03\u7528\u4e86 Color.parseColor() val color : Int = \"#aaaaaa\" . color","title":"String.color"},{"location":"utils/#_1","text":"\ud83d\udc49 \u66ff\u6362\u89c4\u5219(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u66ff\u6362\u89c4\u5219 \ud83d\udc49 \u5e38\u7528Span(DSL\u3001\u94fe\u5f0f\u901a\u7528): \u5e38\u7528Span","title":"\u5176\u5b83\u8bf4\u660e"}]}